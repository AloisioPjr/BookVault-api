version: 2.1

executors:
  ruby-executor:
    docker:
      - image: cimg/ruby:3.4.4
        environment:
          RAILS_ENV: test
      - image: cimg/postgres:14.10
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: bookvault_test
          POSTGRES_PASSWORD: password
    working_directory: ~/bookvault-api

jobs:
  setup:
    executor: ruby-executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3
      - run:
          name: Setup database
          command: |
            cp config/database.yml config/database.yml.bak
            sed -i 's/username:.*/username: postgres/' config/database.yml
            sed -i 's/password:.*/password: password/' config/database.yml
            bundle exec rails db:create db:schema:load
      - persist_to_workspace:
          root: .
          paths:
            - .

  test:
    executor: ruby-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install gems
          command: |
            bundle config set --local path 'vendor/bundle'
            bundle install
      - run:
          name: Prepare database
          command: |
            bundle exec rails db:create db:migrate
      - run:
          name: Run RSpec with JUnit formatter
          command: |
            mkdir -p test-results/rspec
            ./bin/rspec \
              --format RspecJunitFormatter \
              --out test-results/rspec/rspec.xml \
              --format progress
      - store_test_results:
          path: test-results

  deploy:
    docker:
      - image: cimg/ruby:3.4.4
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:7kBg5C/ATWfihqFyqK54rA/Uou0eBaG814/vI144JiU"
      - run:
          name: Deploy Backend and Frontend
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@44.213.20.112 \<< 'EOF'
              echo " Deploying BookVault API..."
              cd ~/BookVault-api
              git pull origin main
              bundle install --without development test
              RAILS_ENV=production bin/rails db:migrate
              RAILS_ENV=production bin/rails assets:precompile
              sudo systemctl restart bookvault-api

              echo " Deploying BookVault Frontend..."
              cd ~/BookVault-Frontend
              git pull origin main
              export VITE_API_BASE_URL=http://44.213.20.112/api/v1
              npm install
              npm run build
              sudo systemctl restart nginx
            EOF


workflows:
  version: 2
  test_and_build:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - deploy:
          requires:
            - test
